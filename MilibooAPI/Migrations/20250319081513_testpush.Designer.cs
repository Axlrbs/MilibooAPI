// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilibooAPI.Models.EntityFramework;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MilibooAPI.Migrations
{
    [DbContext(typeof(MilibooDBContext))]
    [Migration("20250319081513_testpush")]
    partial class testpush
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("miliboo")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("a_comme_idacomme_seq", "miliboo");

            modelBuilder.HasSequence<int>("a_pour_idapour_seq", "miliboo");

            modelBuilder.HasSequence<int>("appartient_idappartient_seq", "miliboo");

            modelBuilder.HasSequence<int>("constitue_idconstitue_seq", "miliboo");

            modelBuilder.HasSequence<int>("demande_iddemande_seq", "miliboo");

            modelBuilder.HasSequence<int>("est_ajoute_dans_idestajoutedans_seq", "miliboo");

            modelBuilder.HasSequence<int>("est_constitue_idestconstitue_seq", "miliboo");

            modelBuilder.HasSequence<int>("est_de_couleur_idestdecouleur_seq", "miliboo");

            modelBuilder.HasSequence<int>("est_inclu_idestinclu_seq", "miliboo");

            modelBuilder.HasSequence<int>("est_incrite_dans_idestinscritedans_seq", "miliboo");

            modelBuilder.HasSequence<int>("failed_jobs_id_seq", "miliboo");

            modelBuilder.HasSequence("personal_access_tokens_id_seq", "miliboo");

            modelBuilder.HasSequence<int>("recherche_idrecherche_seq", "miliboo");

            modelBuilder.HasSequence<int>("se_situe_idsesitue_seq", "miliboo");

            modelBuilder.HasSequence("users_id_seq", "miliboo");

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.AComme", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("acm_idproduit");

                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("acm_idcategorie");

                    b.HasKey("ProduitId", "CategorieId")
                        .HasName("pk_acm");

                    b.HasIndex("CategorieId");

                    b.ToTable("t_j_a_comme_acm", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.APour", b =>
                {
                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("apr_idadresse");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("apr_idclient");

                    b.HasKey("AdresseId", "ClientId")
                        .HasName("pk_apr");

                    b.HasIndex("ClientId");

                    b.ToTable("t_j_a_pour_apr", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("adr_idadresse");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdresseId"));

                    b.Property<decimal?>("CodePostal")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("adr_codepostal")
                        .IsFixedLength();

                    b.Property<string>("NumeroInsee")
                        .IsRequired()
                        .HasColumnType("varchar(15)")
                        .HasColumnName("adr_numeroinsee")
                        .IsFixedLength();

                    b.Property<string>("PaysId")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("adr_idpays");

                    b.Property<string>("Rue")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adr_rue");

                    b.HasKey("AdresseId")
                        .HasName("pk_adr");

                    b.HasIndex("NumeroInsee");

                    b.HasIndex("PaysId");

                    b.HasIndex(new[] { "Rue" }, "uqix_adresse_rue");

                    b.ToTable("t_e_adresse_adr", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Appartient", b =>
                {
                    b.Property<int>("RegroupementId")
                        .HasColumnType("integer")
                        .HasColumnName("aprt_idregroupement");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("aprt_idproduit");

                    b.HasKey("RegroupementId", "ProduitId")
                        .HasName("pk_aprt");

                    b.HasIndex("ProduitId");

                    b.ToTable("t_j_appartient_aprt", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.AvisClient", b =>
                {
                    b.Property<int>("AvisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avc_idavis");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AvisId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("avc_idclient");

                    b.Property<DateTime?>("DateAvis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("avc_dateavis")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("DescriptionAvis")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("avc_descriptionavis");

                    b.Property<int?>("IdAvisParent")
                        .HasColumnType("integer")
                        .HasColumnName("avc_idavisparent");

                    b.Property<int?>("NoteAvis")
                        .HasColumnType("integer")
                        .HasColumnName("avc_note");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("avc_idproduit");

                    b.Property<string>("TitreAvis")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("avc_titreavis");

                    b.HasKey("AvisId")
                        .HasName("pk_avc");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProduitId");

                    b.HasIndex(new[] { "TitreAvis" }, "uqix_avisclient_titreavis");

                    b.ToTable("t_e_avis_client_avc", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Boutique", b =>
                {
                    b.Property<int>("BoutiqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("btq_idboutique");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BoutiqueId"));

                    b.Property<string>("AccesBoutique")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("btq_accesboutique");

                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("btq_idadresse");

                    b.Property<string>("MailBoutique")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("btq_mailboutique");

                    b.Property<string>("TelBoutique")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("btq_telboutique");

                    b.Property<int>("TypeLivraisonId")
                        .HasColumnType("integer")
                        .HasColumnName("btq_idtypelivraison");

                    b.HasKey("BoutiqueId")
                        .HasName("pk_btq");

                    b.HasIndex("AdresseId");

                    b.ToTable("t_e_boutique_btq", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Property<int>("CarteBancaireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("crtban_idcartebancaire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CarteBancaireId"));

                    b.Property<string>("Cvvcarte")
                        .IsRequired()
                        .HasColumnType("varchar(3)")
                        .HasColumnName("crtban_cvvcarte");

                    b.Property<string>("DateExpiration")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("crtban_dateexpiration");

                    b.Property<string>("Libelletypepaiement")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Carte Bancaire")
                        .HasColumnName("crtban_libelletypepaiement");

                    b.Property<string>("NomCarte")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("crtban_nomcarte");

                    b.Property<string>("NumCarte")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .HasColumnName("crtban_numcarte");

                    b.HasKey("CarteBancaireId")
                        .HasName("pk_crtban");

                    b.ToTable("t_e_carte_bancaire_crtban", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Categorie", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cat_idcategorie");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategorieId"));

                    b.Property<int?>("CatIdCategorie")
                        .HasColumnType("integer")
                        .HasColumnName("cat_cat_idcategorie");

                    b.Property<string>("NomCategorie")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cat_nomcategorie");

                    b.HasKey("CategorieId")
                        .HasName("pk_cat");

                    b.HasIndex("CatIdCategorie");

                    b.ToTable("t_e_categorie_cat", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_idclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<DateTime?>("DateAnonymisation")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("clt_dateanonymisation");

                    b.Property<DateTime>("DateDerniereUtilisation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("clt_datederniereutilisation")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("EmailClient")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clt_emailclient");

                    b.Property<bool>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("clt_is_verified");

                    b.Property<string>("MdpClient")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("clt_mdpclient");

                    b.Property<decimal?>("MoyenneAvis")
                        .HasColumnType("numeric")
                        .HasColumnName("clt_moyenneavis");

                    b.Property<int?>("NbTotalPointsFidelite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("clt_nbtotalpointsfidelite");

                    b.Property<string>("NomPersonne")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("clt_nompersonne");

                    b.Property<int?>("NombreAvisDepose")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("clt_nombreavisdepose");

                    b.Property<string>("PrenomPersonne")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("clt_prenompersonne");

                    b.Property<string>("TelPersonne")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("clt_telpersonne");

                    b.HasKey("ClientId")
                        .HasName("pk_clt");

                    b.ToTable("t_e_client_clt", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Coloris", b =>
                {
                    b.Property<int>("ColorisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clr_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ColorisId"));

                    b.Property<string>("LibelleColoris")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clr_libelle");

                    b.HasKey("ColorisId")
                        .HasName("pk_clr");

                    b.HasIndex(new[] { "ColorisId" }, "clr_id");

                    b.ToTable("t_e_coloris_clr", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Commande", b =>
                {
                    b.Property<int>("CommandeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idcommande");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommandeId"));

                    b.Property<int?>("BoutiqueId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idboutique");

                    b.Property<int?>("CarteBancaireId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idcarte");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idclient");

                    b.Property<DateTime?>("DateFacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cmd_datefacture")
                        .HasDefaultValueSql("now()");

                    b.Property<int?>("LivraisonId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idlivraison");

                    b.Property<decimal?>("MontantCommande")
                        .HasColumnType("numeric")
                        .HasColumnName("cmd_montantcommande");

                    b.Property<int?>("NbPointFidelite")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_nbpointfidelite");

                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idpanier");

                    b.Property<int?>("PaypalId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idpaypal");

                    b.Property<string>("Statut")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cmd_statut");

                    b.Property<int?>("VirementId")
                        .HasColumnType("integer")
                        .HasColumnName("cmd_idvirement");

                    b.HasKey("CommandeId")
                        .HasName("pk_cmd");

                    b.HasIndex("BoutiqueId");

                    b.HasIndex("CarteBancaireId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LivraisonId");

                    b.HasIndex("PanierId");

                    b.HasIndex("PaypalId");

                    b.HasIndex("VirementId");

                    b.ToTable("t_e_commande_cmd", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Constitue", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("cst_idproduit");

                    b.Property<int>("EnsembleId")
                        .HasColumnType("integer")
                        .HasColumnName("cst_idensemble");

                    b.HasKey("ProduitId", "EnsembleId")
                        .HasName("pk_cst");

                    b.HasIndex("EnsembleId");

                    b.ToTable("t_e_constitue_cst", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Demande", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("dmd_idproduit");

                    b.Property<int>("ProfessionnelId")
                        .HasColumnType("integer")
                        .HasColumnName("dmd_idprofessionnel");

                    b.HasKey("ProduitId", "ProfessionnelId")
                        .HasName("pk_dmd");

                    b.HasIndex("ProfessionnelId");

                    b.ToTable("t_e_demande_dmd", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EnsembleProduit", b =>
                {
                    b.Property<int>("EnsembleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("esp_idensemble");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EnsembleId"));

                    b.Property<string>("Aspecttechnique")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("esp_aspecttechnique");

                    b.Property<string>("Descriptionensemble")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("esp_descriptionensemble");

                    b.Property<int?>("Stock")
                        .HasColumnType("integer")
                        .HasColumnName("esp_stock");

                    b.HasKey("EnsembleId")
                        .HasName("pk_esp");

                    b.ToTable("t_e_ensemble_produit_esp", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstAjouteDans", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("ejd_idproduit");

                    b.Property<int>("ColorisId")
                        .HasColumnType("integer")
                        .HasColumnName("ejd_idcoloris");

                    b.Property<int>("PanierId")
                        .HasColumnType("integer")
                        .HasColumnName("ejd_idpanier");

                    b.Property<int?>("Quantitepanier")
                        .HasColumnType("integer")
                        .HasColumnName("ejd_quantitepanier");

                    b.HasKey("ProduitId", "ColorisId", "PanierId")
                        .HasName("pk_ejd");

                    b.HasIndex("ColorisId");

                    b.HasIndex("PanierId");

                    b.ToTable("t_j_estajoutedans_ejd", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstCommande", b =>
                {
                    b.Property<int>("CommandeId")
                        .HasColumnType("integer")
                        .HasColumnName("esc_idcommande");

                    b.Property<int>("EstDeCouleurId")
                        .HasColumnType("integer")
                        .HasColumnName("esc_idestdecouleur");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric")
                        .HasColumnName("esc_quantite");

                    b.HasKey("CommandeId", "EstDeCouleurId")
                        .HasName("pk_esc");

                    b.HasIndex("EstDeCouleurId");

                    b.ToTable("t_j_estcommande_esc", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstConstitue", b =>
                {
                    b.Property<int>("AvisId")
                        .HasColumnType("integer")
                        .HasColumnName("esc_idavis");

                    b.Property<string>("Codephoto")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("esc_codephoto");

                    b.HasKey("AvisId", "Codephoto")
                        .HasName("pk_esco");

                    b.HasIndex("Codephoto");

                    b.ToTable("t_j_estconstitue_esc", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstDans", b =>
                {
                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("esd_idcategorie");

                    b.Property<int>("TypeProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("esd_idtypeproduit");

                    b.HasKey("CategorieId", "TypeProduitId")
                        .HasName("pk_esd");

                    b.HasIndex("TypeProduitId");

                    b.ToTable("t_j_estdans_esd", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstDeCouleur", b =>
                {
                    b.Property<int>("EstDeCouleurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("edc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EstDeCouleurId"));

                    b.Property<string>("Codephoto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("edc_codephoto");

                    b.Property<int>("ColorisId")
                        .HasColumnType("integer")
                        .HasColumnName("edc_idcoloris");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("edc_description");

                    b.Property<string>("Nomproduit")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("edc_nomproduit");

                    b.Property<decimal?>("Prixttc")
                        .HasColumnType("numeric")
                        .HasColumnName("edc_prixttc");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("edc_idproduit");

                    b.Property<int?>("Promotion")
                        .HasColumnType("integer")
                        .HasColumnName("edc_promotion");

                    b.Property<int?>("Quantite")
                        .HasColumnType("integer")
                        .HasColumnName("edc_quantite");

                    b.HasKey("EstDeCouleurId")
                        .HasName("pk_edc");

                    b.HasIndex("ColorisId");

                    b.HasIndex("ProduitId");

                    b.HasIndex(new[] { "Nomproduit" }, "idx_estdecouleur_nomproduit");

                    b.ToTable("t_j_estdecouleur_edc", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstInclu", b =>
                {
                    b.Property<int>("CategorieId")
                        .HasColumnType("integer")
                        .HasColumnName("esi_idcategorie");

                    b.Property<int>("EnsembleId")
                        .HasColumnType("integer")
                        .HasColumnName("esi_idensemble");

                    b.HasKey("CategorieId", "EnsembleId")
                        .HasName("pk_esi");

                    b.HasIndex("EnsembleId");

                    b.ToTable("t_j_estinclu_esi", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstInscriteDans", b =>
                {
                    b.Property<string>("Codephoto")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("eid_codephoto");

                    b.Property<int>("Codephototheque")
                        .HasColumnType("integer")
                        .HasColumnName("eid_codephototheque");

                    b.HasKey("Codephoto", "Codephototheque")
                        .HasName("pk_eid");

                    b.HasIndex("Codephototheque");

                    b.ToTable("t_j_estinscritedans_eid", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Liker", b =>
                {
                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("lik_idproduit");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("lik_idclient");

                    b.HasKey("ProduitId", "ClientId")
                        .HasName("pk_lik");

                    b.HasIndex("ClientId");

                    b.ToTable("t_e_liker_lik", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.LivraisonDomicile", b =>
                {
                    b.Property<int>("LivraisonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("liv_idlivraison");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LivraisonId"));

                    b.Property<int>("Adresseid")
                        .HasColumnType("integer")
                        .HasColumnName("liv_idadresse");

                    b.Property<bool?>("Estexpress")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("liv_estexpress");

                    b.Property<string>("Libelletypelivraison")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Domicile")
                        .HasColumnName("liv_libelletypelivraison");

                    b.Property<int>("TypeLivraisonId")
                        .HasColumnType("integer")
                        .HasColumnName("liv_idtypelivraison");

                    b.HasKey("LivraisonId")
                        .HasName("pk_liv");

                    b.HasIndex("Adresseid");

                    b.ToTable("t_e_livraison_domicile_liv", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Panier", b =>
                {
                    b.Property<int>("PanierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pan_idpanier");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PanierId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("pan_idclient");

                    b.Property<DateOnly?>("Dateetheure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("pan_dateetheure")
                        .HasDefaultValueSql("now()");

                    b.HasKey("PanierId")
                        .HasName("pk_pan");

                    b.HasIndex(new[] { "ClientId" }, "idx_panier_idclient");

                    b.ToTable("t_e_panier_pan", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Paypal", b =>
                {
                    b.Property<int>("PaypalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pyp_idpaypal");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaypalId"));

                    b.Property<string>("Libelletypepaiement")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasDefaultValue("Paypal")
                        .HasColumnName("pyp_libelletypepaiement");

                    b.Property<int>("TypePaiementId")
                        .HasColumnType("integer")
                        .HasColumnName("pyp_idtypepaiement");

                    b.HasKey("PaypalId")
                        .HasName("pk_pyp");

                    b.HasIndex("TypePaiementId");

                    b.ToTable("t_e_paypal_pyp", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Pays", b =>
                {
                    b.Property<string>("PaysId")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("pys_idpays");

                    b.Property<string>("Libellepays")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("pys_libellepays");

                    b.HasKey("PaysId")
                        .HasName("pk_pys");

                    b.HasIndex(new[] { "Libellepays" }, "idx_pays_libellepays");

                    b.ToTable("t_e_pays_pys", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Photo", b =>
                {
                    b.Property<string>("CodePhoto")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("pht_codephoto");

                    b.Property<string>("Urlphoto")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("pht_urlphoto");

                    b.HasKey("CodePhoto")
                        .HasName("pk_pht");

                    b.HasIndex(new[] { "Urlphoto" }, "idx_photo_urlphoto");

                    b.ToTable("t_e_photo_pht", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Phototheque", b =>
                {
                    b.Property<int>("Codephototheque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ptt_codephototheque");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codephototheque"));

                    b.HasKey("Codephototheque")
                        .HasName("pk_ptt");

                    b.ToTable("t_e_phototheque_ptt", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Produit", b =>
                {
                    b.Property<int>("ProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prd_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProduitId"));

                    b.Property<string>("Caracteristiquetechnique")
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)")
                        .HasColumnName("prd_carac");

                    b.Property<int?>("Like")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("prd_like");

                    b.Property<string>("Reference")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("prd_ref");

                    b.HasKey("ProduitId")
                        .HasName("pk_prd");

                    b.HasIndex(new[] { "Reference" }, "idx_produit_reference");

                    b.ToTable("t_e_produit_prd", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Professionnel", b =>
                {
                    b.Property<int>("ProfessionnelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("prf_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProfessionnelId"));

                    b.Property<string>("Nompersonne")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("prf_nompersonne");

                    b.Property<string>("Prenompersonne")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("prf_prenompersonne");

                    b.Property<string>("Raisonsociale")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prf_raisonsociale");

                    b.Property<string>("Telfixe")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("prf_telfixe");

                    b.Property<string>("Telpersonne")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("prf_telpersonne");

                    b.HasKey("ProfessionnelId")
                        .HasName("pk_prf");

                    b.HasIndex(new[] { "ProfessionnelId" }, "uc_professionnel")
                        .IsUnique();

                    b.ToTable("t_e_professionnel_prf", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Recherche", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("rch_idclient");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer")
                        .HasColumnName("rch_idproduit");

                    b.HasKey("ClientId", "ProduitId")
                        .HasName("pk_rch");

                    b.HasIndex("ProduitId");

                    b.ToTable("t_e_recherche_rch", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Regroupement", b =>
                {
                    b.Property<int>("RegroupementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rgp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RegroupementId"));

                    b.Property<string>("Libelleregroupement")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("rgp_libelle");

                    b.HasKey("RegroupementId")
                        .HasName("pk_rgp");

                    b.ToTable("t_e_regroupement_rgp", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.SeSitue", b =>
                {
                    b.Property<int>("AdresseId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_idadresse");

                    b.Property<int>("ProfessionnelId")
                        .HasColumnType("integer")
                        .HasColumnName("sst_idprofessionnel");

                    b.HasKey("AdresseId", "ProfessionnelId")
                        .HasName("pk_sst");

                    b.HasIndex("ProfessionnelId");

                    b.ToTable("t_j_sesitue_sst", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.TypePaiement", b =>
                {
                    b.Property<int>("TypePaiementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("typ_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypePaiementId"));

                    b.Property<string>("Libelletypepaiement")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("typ_libelle");

                    b.HasKey("TypePaiementId")
                        .HasName("pk_typ");

                    b.ToTable("t_e_typepaiement_typ", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Property<int>("TypeProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tpp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeProduitId"));

                    b.Property<string>("LibelleTypeProduit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tpp_libelle");

                    b.HasKey("TypeProduitId")
                        .HasName("pk_tpp");

                    b.HasIndex(new[] { "TypeProduitId" }, "tpp_id");

                    b.ToTable("t_e_typeproduit_tpp", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Ville", b =>
                {
                    b.Property<string>("NumeroInsee")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("vil_numeroinsee");

                    b.Property<string>("Libelleville")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("vil_libelle");

                    b.HasKey("NumeroInsee")
                        .HasName("pk_vil");

                    b.HasIndex(new[] { "NumeroInsee" }, "idx_ville_libelleville");

                    b.ToTable("t_e_ville_vil", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.VirementBancaire", b =>
                {
                    b.Property<int>("VirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vba_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VirementId"));

                    b.Property<string>("Iban")
                        .HasMaxLength(34)
                        .HasColumnType("character varying(34)")
                        .HasColumnName("vba_iban");

                    b.Property<int>("TypePaiementId")
                        .HasColumnType("integer")
                        .HasColumnName("vba_idtypepaiement");

                    b.HasKey("VirementId")
                        .HasName("pk_vba");

                    b.HasIndex("TypePaiementId");

                    b.ToTable("t_e_virementbancaire_vba", "miliboo");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.AComme", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Categorie", "IdcategorieNavigation")
                        .WithMany("ACommes")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_acm_cat");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("ACommes")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_acm_prd");

                    b.Navigation("IdcategorieNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.APour", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Adresse", "IdAdresseNavigation")
                        .WithMany("APours")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_apr_adr");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdClientNavigation")
                        .WithMany("APours")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_apr_clt");

                    b.Navigation("IdAdresseNavigation");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Ville", "IdVilleNavigation")
                        .WithMany("Adresses")
                        .HasForeignKey("NumeroInsee")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_apr_vil");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Pays", "IdPaysNavigation")
                        .WithMany("Adresses")
                        .HasForeignKey("PaysId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_adr_pyp");

                    b.Navigation("IdPaysNavigation");

                    b.Navigation("IdVilleNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Appartient", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdProduitNavigation")
                        .WithMany("Appartients")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_aprt_prd");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Regroupement", "IdRegroupementNavigation")
                        .WithMany("Appartients")
                        .HasForeignKey("RegroupementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_aprt_rgp");

                    b.Navigation("IdProduitNavigation");

                    b.Navigation("IdRegroupementNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.AvisClient", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdclientNavigation")
                        .WithMany("AvisClients")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_avc_clt");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("AvisClients")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_avc_prd");

                    b.Navigation("IdclientNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Boutique", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Adresse", "IdadresseNavigation")
                        .WithMany("Boutiques")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_btq_adr");

                    b.Navigation("IdadresseNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Categorie", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Categorie", "CatIdcategorieNavigation")
                        .WithMany("InverseCatIdcategorieNavigation")
                        .HasForeignKey("CatIdCategorie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cat_cat");

                    b.Navigation("CatIdcategorieNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Commande", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Boutique", "IdBoutiqueNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("BoutiqueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_btq");

                    b.HasOne("MilibooAPI.Models.EntityFramework.CarteBancaire", "IdCarteNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("CarteBancaireId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_crtban");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdClientNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cmd_clt");

                    b.HasOne("MilibooAPI.Models.EntityFramework.LivraisonDomicile", "IdLivraisonNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("LivraisonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_liv");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Panier", "IdPanierNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cmd_pan");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Paypal", "IdPaypalNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("PaypalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_pyp");

                    b.HasOne("MilibooAPI.Models.EntityFramework.VirementBancaire", "IdVirementNavigation")
                        .WithMany("Commandes")
                        .HasForeignKey("VirementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_cmd_vba");

                    b.Navigation("IdBoutiqueNavigation");

                    b.Navigation("IdCarteNavigation");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdLivraisonNavigation");

                    b.Navigation("IdPanierNavigation");

                    b.Navigation("IdPaypalNavigation");

                    b.Navigation("IdVirementNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Constitue", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.EnsembleProduit", "IdensembleNavigation")
                        .WithMany("Constitues")
                        .HasForeignKey("EnsembleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cst_esp");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("Constitues")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_cst_prd");

                    b.Navigation("IdensembleNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Demande", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("Demandes")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dmd_prd");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Professionnel", "IdProfessionnelNavigation")
                        .WithMany("Demandes")
                        .HasForeignKey("ProfessionnelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_dmd_prf");

                    b.Navigation("IdProfessionnelNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstAjouteDans", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Coloris", "IdcolorisNavigation")
                        .WithMany("EstAjouteDanss")
                        .HasForeignKey("ColorisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ejd_clr");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Panier", "IdpanierNavigation")
                        .WithMany("EstAjouteDanss")
                        .HasForeignKey("PanierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ejd_pan");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("EstAjouteDanss")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_ejd_prd");

                    b.Navigation("IdcolorisNavigation");

                    b.Navigation("IdpanierNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstCommande", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Commande", "IdCommandeNavigation")
                        .WithMany("EstCommandes")
                        .HasForeignKey("CommandeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esc_cmd");

                    b.HasOne("MilibooAPI.Models.EntityFramework.EstDeCouleur", "IdEstDeCouleurNavigation")
                        .WithMany("EstCommandes")
                        .HasForeignKey("EstDeCouleurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esc_edc");

                    b.Navigation("IdCommandeNavigation");

                    b.Navigation("IdEstDeCouleurNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstConstitue", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.AvisClient", "IdavisNavigation")
                        .WithMany("EstConstitues")
                        .HasForeignKey("AvisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esco_avs");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Photo", "CodephotoNavigation")
                        .WithMany("EstConstitues")
                        .HasForeignKey("Codephoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esco_pht");

                    b.Navigation("CodephotoNavigation");

                    b.Navigation("IdavisNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstDans", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Categorie", "IdcategorieNavigation")
                        .WithMany("EstDanss")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esd_cat");

                    b.HasOne("MilibooAPI.Models.EntityFramework.TypeProduit", "IdtypeproduitNavigation")
                        .WithMany("EstDanss")
                        .HasForeignKey("TypeProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esd_prd");

                    b.Navigation("IdcategorieNavigation");

                    b.Navigation("IdtypeproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstDeCouleur", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Coloris", "IdcolorisNavigation")
                        .WithMany("EstDeCouleurs")
                        .HasForeignKey("ColorisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_edc_clr");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("EstDeCouleurs")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_edc_prd");

                    b.Navigation("IdcolorisNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstInclu", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Categorie", "IdcategorieNavigation")
                        .WithMany("EstInclus")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esi_cat");

                    b.HasOne("MilibooAPI.Models.EntityFramework.EnsembleProduit", "IdensembleNavigation")
                        .WithMany("EstInclus")
                        .HasForeignKey("EnsembleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esi_esp");

                    b.Navigation("IdcategorieNavigation");

                    b.Navigation("IdensembleNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstInscriteDans", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Photo", "CodephotoNavigation")
                        .WithMany("EstIncriteDanss")
                        .HasForeignKey("Codephoto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_eid_pht");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Phototheque", "CodephotothequeNavigation")
                        .WithMany("EstIncriteDanss")
                        .HasForeignKey("Codephototheque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_esi_ptt");

                    b.Navigation("CodephotoNavigation");

                    b.Navigation("CodephotothequeNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Liker", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdClientNavigation")
                        .WithMany("Likers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lik_clt");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("Likers")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_lik_prd");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.LivraisonDomicile", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Adresse", "IdadresseNavigation")
                        .WithMany("LivraisonDomiciles")
                        .HasForeignKey("Adresseid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_liv_adr");

                    b.Navigation("IdadresseNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Panier", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdClientNavigation")
                        .WithMany("Paniers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pan_clt");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Paypal", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.TypePaiement", "IdPaypalNavigation")
                        .WithMany("Paypals")
                        .HasForeignKey("TypePaiementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_pyp_tpp");

                    b.Navigation("IdPaypalNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Recherche", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Client", "IdClientNavigation")
                        .WithMany("Recherches")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rch_clt");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Produit", "IdproduitNavigation")
                        .WithMany("Recherches")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_rch_prd");

                    b.Navigation("IdClientNavigation");

                    b.Navigation("IdproduitNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.SeSitue", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.Adresse", "IdadresseNavigation")
                        .WithMany("SeSitues")
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sst_adr");

                    b.HasOne("MilibooAPI.Models.EntityFramework.Professionnel", "IdProfessionnelNavigation")
                        .WithMany("SeSitues")
                        .HasForeignKey("ProfessionnelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_sst_prf");

                    b.Navigation("IdProfessionnelNavigation");

                    b.Navigation("IdadresseNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.VirementBancaire", b =>
                {
                    b.HasOne("MilibooAPI.Models.EntityFramework.TypePaiement", "IdVirementBancaireNavigation")
                        .WithMany("VirementBancaires")
                        .HasForeignKey("TypePaiementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdVirementBancaireNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Adresse", b =>
                {
                    b.Navigation("APours");

                    b.Navigation("Boutiques");

                    b.Navigation("LivraisonDomiciles");

                    b.Navigation("SeSitues");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.AvisClient", b =>
                {
                    b.Navigation("EstConstitues");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Boutique", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.CarteBancaire", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Categorie", b =>
                {
                    b.Navigation("ACommes");

                    b.Navigation("EstDanss");

                    b.Navigation("EstInclus");

                    b.Navigation("InverseCatIdcategorieNavigation");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("APours");

                    b.Navigation("AvisClients");

                    b.Navigation("Commandes");

                    b.Navigation("Likers");

                    b.Navigation("Paniers");

                    b.Navigation("Recherches");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Coloris", b =>
                {
                    b.Navigation("EstAjouteDanss");

                    b.Navigation("EstDeCouleurs");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Commande", b =>
                {
                    b.Navigation("EstCommandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EnsembleProduit", b =>
                {
                    b.Navigation("Constitues");

                    b.Navigation("EstInclus");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.EstDeCouleur", b =>
                {
                    b.Navigation("EstCommandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.LivraisonDomicile", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Panier", b =>
                {
                    b.Navigation("Commandes");

                    b.Navigation("EstAjouteDanss");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Paypal", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("Adresses");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Photo", b =>
                {
                    b.Navigation("EstConstitues");

                    b.Navigation("EstIncriteDanss");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Phototheque", b =>
                {
                    b.Navigation("EstIncriteDanss");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Produit", b =>
                {
                    b.Navigation("ACommes");

                    b.Navigation("Appartients");

                    b.Navigation("AvisClients");

                    b.Navigation("Constitues");

                    b.Navigation("Demandes");

                    b.Navigation("EstAjouteDanss");

                    b.Navigation("EstDeCouleurs");

                    b.Navigation("Likers");

                    b.Navigation("Recherches");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Professionnel", b =>
                {
                    b.Navigation("Demandes");

                    b.Navigation("SeSitues");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Regroupement", b =>
                {
                    b.Navigation("Appartients");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.TypePaiement", b =>
                {
                    b.Navigation("Paypals");

                    b.Navigation("VirementBancaires");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.TypeProduit", b =>
                {
                    b.Navigation("EstDanss");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.Ville", b =>
                {
                    b.Navigation("Adresses");
                });

            modelBuilder.Entity("MilibooAPI.Models.EntityFramework.VirementBancaire", b =>
                {
                    b.Navigation("Commandes");
                });
#pragma warning restore 612, 618
        }
    }
}
